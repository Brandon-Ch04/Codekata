def scrabble_score(st): 
     
    letters = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"]
    points = [1, 3, 3, 2, 1, 4, 2, 4, 1, 8, 5, 1, 3, 4, 1, 3, 10, 1, 1, 1, 1, 4, 4, 8, 4, 10]

    L = zip(letters,points)

    letter_to_points = {key:value for key,value in L}
    letter_to_points[" "] = 0
    
    total = 0
    if st.islower() == True:
        st = st.upper()
    else:
        st = st.upper()
    
    for letter in st:
        
        total += letter_to_points.get(letter,0)
    return total
    
    
    ################   -Write a program that, given a word, computes the scrabble score for that word.  ###################
Letter Values

You'll need these:

Letter                           Value
A, E, I, O, U, L, N, R, S, T       1
D, G                               2
B, C, M, P                         3
F, H, V, W, Y                      4
K                                  5
J, X                               8
Q, Z                               10

There will be a preloaded dictionary dict_scores with all these values: dict_scores["E"] == 1
Examples

"cabbage" --> 14

"cabbage" should be scored as worth 14 points:

    3 points for C
    1 point for A, twice
    3 points for B, twice
    2 points for G
    1 point for E

And to total:

3 + 2*1 + 2*3 + 2 + 1 = 3 + 2 + 6 + 3 = 14

Empty string should return 0. The string can contain spaces and letters (upper and lower case), you should calculate the scrabble score only of the letters in that string.

""           --> 0
"STREET"    --> 6
"st re et"    --> 6
"ca bba g  e" --> 14


       
